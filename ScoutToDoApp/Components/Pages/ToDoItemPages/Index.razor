@page "/todoitems"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Components
@using ScoutToDoApp.Models
@using ScoutToDoApp.Data
@implements IAsyncDisposable
@inject IDbContextFactory<ScoutToDoApp.Data.ScoutToDoAppContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="todoitems/create">Create New</a>
</p>

@foreach(var item in context.ToDoItem)
{
    <p>@item.Name</p>
}

<QuickGrid Class="table" Items="context.ToDoItem">
    <Microsoft.AspNetCore.Components.PropertyColumn Property="todoitem => todoitem.Name" />
    <Microsoft.AspNetCore.Components.PropertyColumn Property="todoitem => todoitem.IsComplete" />
    <Microsoft.AspNetCore.Components.PropertyColumn Property="todoitem => todoitem.Secret" />

    <Microsoft.AspNetCore.Components.TemplateColumn Context="todoitem">
        @* <a href="@($"todoitems/edit?id={todoitem.Id}")">Edit</a> |
        <a href="@($"todoitems/details?id={todoitem.Id}")">Details</a> |
        <a href="@($"todoitems/delete?id={todoitem.Id}")">Delete</a> *@
    </Microsoft.AspNetCore.Components.TemplateColumn>
</QuickGrid>

@code {
    private ScoutToDoAppContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
